syntax = "proto3";

service Database {
  rpc CreateUser(User) returns (UserResponse) {}
  rpc GetUser(User) returns (UserResponse) {}
  rpc GetAllUsers(DBEmpty) returns (UserResponse) {}
  rpc GetUserByUserName(User) returns (UserResponse) {}

  rpc CreateDataset(Dataset) returns (DatasetResp) {}
  rpc GetDatasetByName(Dataset) returns (DatasetResp) {}
  rpc RemoveDatasetByName(Dataset) returns (DatasetResp) {}
  rpc GetAllDatasets(DBEmpty) returns (DatasetResp) {}
  rpc GetDatasetById(Dataset) returns (DatasetResp) {}
  rpc GetAllMetadataID(DatabaseEmpty) returns (MetadataResponse) {}
  rpc GetDatasetOwner(Dataset) returns (UserResponse) {}

  rpc CreateAPI(API) returns (APIResp) {}
  rpc GetAllAPIs(DBEmpty) returns (GetAPIResp) {}

  rpc CreateAPIDependency(APIDependency) returns (APIDependencyResp) {}
  rpc GetAllDependencies(DBEmpty) returns (APIDependencyResp) {}

  rpc CreatePolicy(Policy) returns (PolicyResp) {}
  rpc GetAllPolicies(DBEmpty) returns (PolicyResp) {}

  rpc CreateDerived(Derived) returns (DerivedResp) {}

  rpc CreateProvenance(Provenance) returns (ProvenanceResp) {}
}

message User {
  int32 id = 1;
  string user_name = 2;
  string password = 3;
  int32 limit = 4;
}

message UserResponse {
  int32 status = 1;
  string msg = 2;
  repeated User data = 3;
  bytes signature = 4; // In general, when we return a response to the Client
                       // we want to prove that we sent the response
}

message Dataset {
  int32 id = 1;
  string name = 2;
  string description = 3;
  bool upload = 4;
  string url = 5;
  int32 owner_id = 6;
}

message DatasetResp {
  int32 status = 1;
  string msg = 2;
  repeated Dataset data = 3;
}

// An empty message passed into the database service
message DatabaseEmpty {

}

// Response returning IDs of all datasets whose derived_type == metadata
message MetadataResponse {
  int32 status = 1;
  string message = 2;
  repeated int32 metadataID = 3;
}

// For API table
message API {
  string api_name = 1;
}

message DBEmpty {

}

message APIResp {
  int32 status = 1;
  string msg = 2;
  repeated API data = 3;
}

message GetAPIResp {
  int32 status = 1;
  string msg = 2;
  repeated string data = 3;
}

message APIDependency {
  string from_api = 1;
  string to_api = 2;
}

message APIDependencyResp {
  int32 status = 1;
  string msg = 2;
  repeated APIDependency data = 3;
}

message Policy {
  int32 user_id = 1;
  string api = 2;
  int32 data_id = 3;
}

message PolicyResp {
  int32 status = 1;
  string msg = 2;
  repeated Policy data = 3;
}

message Derived {
  int32 id  = 1;
  int32 caller_id = 2;
  string api = 3;
}

message DerivedResp {
  int32 status = 1;
  string msg = 2;
  repeated Derived data = 3;
}

message Provenance {
  int32 child_id = 1;
  int32 parent_id = 2;
}

message ProvenanceResp {
  int32 status = 1;
  string msg = 2;
  repeated Provenance data = 3;
}
